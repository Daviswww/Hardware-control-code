C51 COMPILER V9.00   PING                                                                  05/17/2019 21:37:53 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE PING
OBJECT MODULE PLACED IN ping.OBJ
COMPILER INVOKED BY: D:\KEILC 4\C51\BIN\C51.EXE ping.c BROWSE DEBUG OBJECTEXTEND CODE

line level    source

   1          #include <reg51.h>
   2          
   3          sbit trig=P3^5;
   4          sbit LED=P2^4;
   5          
   6          void convert(unsigned int);
   7          void display(unsigned char );
   8          void delay(unsigned int);
   9          void delayz(unsigned int);
  10          void send_pulse(void);
  11          unsigned int get_range(void);
  12          void updata(void);
  13          unsigned char seg[10] =
  14          {
  15              0xC0, 0xf9, 0xa4, 0xb0, 0x99,
  16              0x92, 0x82, 0xf8, 0x80, 0x90
  17          };
  18          unsigned char buf[4] = {0, 0, 0, 0};
  19          unsigned int cms;
  20          unsigned char j;
  21          void main()
  22          {
  23   1          for(j = 0; j < 3; j++)
  24   1          {
  25   2              LED=0x00;
  26   2              delayz(20);
  27   2              LED=0xFF;
  28   2              delayz(10);
  29   2          }
  30   1      
  31   1          TMOD=0x09;//timer0 in 16 bit mode with gate enable
  32   1          TR0=1;//timer run enabled
  33   1          TH0=0x00;
  34   1          TL0=0x00;
  35   1      
  36   1          while(1)
  37   1          {
  38   2              get_range();
  39   2              delayz(2);
  40   2          }
  41   1      }
  42          void send_pulse(void) 
  43          {
  44   1          TH0=0x00;TL0=0x00;
  45   1          trig=1; //Sending trigger pulse P3^^5
  46   1          delayz(10); //Wait for about 10milliseconds 
  47   1          trig=0; //Turn off trigger
  48   1      }
  49          unsigned int get_range(void)
  50          {
  51   1          long int timer_val,i=0;
  52   1          send_pulse();
  53   1          while(!INT0); //Waiting until echo pulse is detected
  54   1          while(INT0); //Waiting until echo pulse changes its state
  55   1          TR0=0;
C51 COMPILER V9.00   PING                                                                  05/17/2019 21:37:53 PAGE 2   

  56   1          timer_val=(TH0<<8)+TL0;
  57   1          cms=timer_val/59;
  58   1          delay(200);
  59   1          if(cms > 100)
  60   1          {
  61   2              cms = 99;
  62   2          }
  63   1          return cms;
  64   1      }
  65          void convert(unsigned int distance)
  66          {
  67   1          buf[3]=distance/1000;
  68   1          buf[2]=(distance%1000)/100;
  69   1          buf[1]=(distance%100)/10;
  70   1          buf[0]=distance%10;
  71   1      }
  72          void updata(void)
  73          {
  74   1          P2 = 0x0e;
  75   1          P0 = seg[buf[3]];
  76   1          delayz(4);
  77   1          P2 = 0x0d;
  78   1          P0 = seg[buf[2]];
  79   1          delayz(4);
  80   1          P2 = 0x0b;
  81   1          P0 = seg[buf[1]];
  82   1          delayz(4);
  83   1          P2 = 0x07;
  84   1          P0 = seg[buf[0]];
  85   1          delayz(4);
  86   1      }
  87          void delayz(unsigned int n)
  88          {
  89   1          unsigned char i;
  90   1          for(n;n>0;n--)
  91   1          {
  92   2              for(i=250;i>0;i--);
  93   2              for(i=247;i>0;i--);
  94   2          }
  95   1      }
  96          void delay(unsigned int count)
  97          {
  98   1              unsigned int i;
  99   1              for(i = 0; i < count; i++);
 100   1      }
C51 COMPILER V9.00   PING                                                                  05/17/2019 21:37:53 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 21
                                           ; SOURCE LINE # 22
                                           ; SOURCE LINE # 23
0000 E4                CLR     A
0001 F500        R     MOV     j,A
0003         ?C0001:
                                           ; SOURCE LINE # 24
                                           ; SOURCE LINE # 25
0003 C2A4              CLR     LED
                                           ; SOURCE LINE # 26
0005 7F14              MOV     R7,#014H
0007 7E00              MOV     R6,#00H
0009 120000      R     LCALL   _delayz
                                           ; SOURCE LINE # 27
000C D2A4              SETB    LED
                                           ; SOURCE LINE # 28
000E 7F0A              MOV     R7,#0AH
0010 7E00              MOV     R6,#00H
0012 120000      R     LCALL   _delayz
                                           ; SOURCE LINE # 29
0015 0500        R     INC     j
0017 E500        R     MOV     A,j
0019 C3                CLR     C
001A 9403              SUBB    A,#03H
001C 40E5              JC      ?C0001
001E         ?C0002:
                                           ; SOURCE LINE # 31
001E 758909            MOV     TMOD,#09H
                                           ; SOURCE LINE # 32
0021 D28C              SETB    TR0
                                           ; SOURCE LINE # 33
0023 E4                CLR     A
0024 F58C              MOV     TH0,A
                                           ; SOURCE LINE # 34
0026 F58A              MOV     TL0,A
0028         ?C0004:
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 38
0028 120000      R     LCALL   get_range
                                           ; SOURCE LINE # 39
002B 7F02              MOV     R7,#02H
002D 7E00              MOV     R6,#00H
002F 120000      R     LCALL   _delayz
                                           ; SOURCE LINE # 40
0032 80F4              SJMP    ?C0004
             ; FUNCTION main (END)

             ; FUNCTION send_pulse (BEGIN)
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 43
                                           ; SOURCE LINE # 44
0000 E4                CLR     A
0001 F58C              MOV     TH0,A
0003 F58A              MOV     TL0,A
                                           ; SOURCE LINE # 45
0005 D2B5              SETB    trig
                                           ; SOURCE LINE # 46
C51 COMPILER V9.00   PING                                                                  05/17/2019 21:37:53 PAGE 4   

0007 7F0A              MOV     R7,#0AH
0009 FE                MOV     R6,A
000A 120000      R     LCALL   _delayz
                                           ; SOURCE LINE # 47
000D C2B5              CLR     trig
                                           ; SOURCE LINE # 48
000F 22                RET     
             ; FUNCTION send_pulse (END)

             ; FUNCTION get_range (BEGIN)
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 51
0000 E4                CLR     A
0001 F500        R     MOV     i+03H,A
0003 F500        R     MOV     i+02H,A
0005 F500        R     MOV     i+01H,A
0007 F500        R     MOV     i,A
                                           ; SOURCE LINE # 52
0009 120000      R     LCALL   send_pulse
000C         ?C0008:
                                           ; SOURCE LINE # 53
000C 30B2FD            JNB     INT0,?C0008
000F         ?C0009:
000F         ?C0010:
                                           ; SOURCE LINE # 54
000F 20B2FD            JB      INT0,?C0010
0012         ?C0011:
                                           ; SOURCE LINE # 55
0012 C28C              CLR     TR0
                                           ; SOURCE LINE # 56
0014 AF8C              MOV     R7,TH0
0016 EF                MOV     A,R7
0017 FE                MOV     R6,A
0018 AD8A              MOV     R5,TL0
001A 7C00              MOV     R4,#00H
001C E4                CLR     A
001D 2D                ADD     A,R5
001E FF                MOV     R7,A
001F EC                MOV     A,R4
0020 3E                ADDC    A,R6
0021 FE                MOV     R6,A
0022 E4                CLR     A
0023 FD                MOV     R5,A
;---- Variable 'timer_val' assigned to Register 'R4/R5/R6/R7' ----
                                           ; SOURCE LINE # 57
0024 7B3B              MOV     R3,#03BH
0026 FA                MOV     R2,A
0027 F9                MOV     R1,A
0028 F8                MOV     R0,A
0029 120000      E     LCALL   ?C?SLDIV
002C 8E00        R     MOV     cms,R6
002E 8F00        R     MOV     cms+01H,R7
                                           ; SOURCE LINE # 58
0030 7FC8              MOV     R7,#0C8H
0032 7E00              MOV     R6,#00H
0034 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 59
0037 D3                SETB    C
0038 E500        R     MOV     A,cms+01H
003A 9464              SUBB    A,#064H
003C E500        R     MOV     A,cms
C51 COMPILER V9.00   PING                                                                  05/17/2019 21:37:53 PAGE 5   

003E 9400              SUBB    A,#00H
0040 4006              JC      ?C0012
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
0042 750000      R     MOV     cms,#00H
0045 750063      R     MOV     cms+01H,#063H
                                           ; SOURCE LINE # 62
0048         ?C0012:
                                           ; SOURCE LINE # 63
0048 AE00        R     MOV     R6,cms
004A AF00        R     MOV     R7,cms+01H
                                           ; SOURCE LINE # 64
004C         ?C0013:
004C 22                RET     
             ; FUNCTION get_range (END)

             ; FUNCTION _convert (BEGIN)
                                           ; SOURCE LINE # 65
;---- Variable 'distance' assigned to Register 'R2/R3' ----
0000 AB07              MOV     R3,AR7
0002 AA06              MOV     R2,AR6
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
0004 7C03              MOV     R4,#03H
0006 7DE8              MOV     R5,#0E8H
0008 120000      E     LCALL   ?C?UIDIV
000B 8F00        R     MOV     buf+03H,R7
                                           ; SOURCE LINE # 68
000D 7C03              MOV     R4,#03H
000F 7DE8              MOV     R5,#0E8H
0011 AF03              MOV     R7,AR3
0013 AE02              MOV     R6,AR2
0015 120000      E     LCALL   ?C?UIDIV
0018 7E00              MOV     R6,#00H
001A 7F64              MOV     R7,#064H
001C CF                XCH     A,R7
001D CD                XCH     A,R5
001E CF                XCH     A,R7
001F CE                XCH     A,R6
0020 CC                XCH     A,R4
0021 CE                XCH     A,R6
0022 120000      E     LCALL   ?C?UIDIV
0025 8F00        R     MOV     buf+02H,R7
                                           ; SOURCE LINE # 69
0027 7C00              MOV     R4,#00H
0029 7D64              MOV     R5,#064H
002B AF03              MOV     R7,AR3
002D AE02              MOV     R6,AR2
002F 120000      E     LCALL   ?C?UIDIV
0032 7E00              MOV     R6,#00H
0034 7F0A              MOV     R7,#0AH
0036 CF                XCH     A,R7
0037 CD                XCH     A,R5
0038 CF                XCH     A,R7
0039 CE                XCH     A,R6
003A CC                XCH     A,R4
003B CE                XCH     A,R6
003C 120000      E     LCALL   ?C?UIDIV
003F 8F00        R     MOV     buf+01H,R7
                                           ; SOURCE LINE # 70
0041 AE02              MOV     R6,AR2
0043 AF03              MOV     R7,AR3
C51 COMPILER V9.00   PING                                                                  05/17/2019 21:37:53 PAGE 6   

0045 7C00              MOV     R4,#00H
0047 7D0A              MOV     R5,#0AH
0049 120000      E     LCALL   ?C?UIDIV
004C 8D00        R     MOV     buf,R5
                                           ; SOURCE LINE # 71
004E 22                RET     
             ; FUNCTION _convert (END)

             ; FUNCTION updata (BEGIN)
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
0000 75A00E            MOV     P2,#0EH
                                           ; SOURCE LINE # 75
0003 7400        R     MOV     A,#LOW seg
0005 2500        R     ADD     A,buf+03H
                                           ; SOURCE LINE # 76
0007 120000      R     LCALL   L?0032
                                           ; SOURCE LINE # 77
000A 75A00D            MOV     P2,#0DH
                                           ; SOURCE LINE # 78
000D 7400        R     MOV     A,#LOW seg
000F 2500        R     ADD     A,buf+02H
                                           ; SOURCE LINE # 79
0011 120000      R     LCALL   L?0032
                                           ; SOURCE LINE # 80
0014 75A00B            MOV     P2,#0BH
                                           ; SOURCE LINE # 81
0017 7400        R     MOV     A,#LOW seg
0019 2500        R     ADD     A,buf+01H
                                           ; SOURCE LINE # 82
001B 120000      R     LCALL   L?0033
                                           ; SOURCE LINE # 83
001E 75A007            MOV     P2,#07H
                                           ; SOURCE LINE # 84
0021 7400        R     MOV     A,#LOW seg
0023 2500        R     ADD     A,buf
0025 F8                MOV     R0,A
0026 E6                MOV     A,@R0
0027 F580              MOV     P0,A
                                           ; SOURCE LINE # 85
0029 7F04              MOV     R7,#04H
002B 7E00              MOV     R6,#00H
002D 020000      R     LJMP    _delayz
             ; FUNCTION updata (END)

             ; FUNCTION L?0032 (BEGIN)
0000         L?0033:
0000 F8                MOV     R0,A
0001 E6                MOV     A,@R0
0002 F580              MOV     P0,A
0004 7F04              MOV     R7,#04H
0006 7E00              MOV     R6,#00H
             ; FUNCTION _delayz (BEGIN)
                                           ; SOURCE LINE # 87
;---- Variable 'n' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 90
0008         ?C0016:
0008 D3                SETB    C
0009 EF                MOV     A,R7
000A 9400              SUBB    A,#00H
C51 COMPILER V9.00   PING                                                                  05/17/2019 21:37:53 PAGE 7   

000C EE                MOV     A,R6
000D 9400              SUBB    A,#00H
000F 400F              JC      ?C0025
                                           ; SOURCE LINE # 91
                                           ; SOURCE LINE # 92
;---- Variable 'i' assigned to Register 'R5' ----
0011 7DFA              MOV     R5,#0FAH
0013         ?C0019:
0013 DDFE              DJNZ    R5,?C0019
0015         ?C0020:
                                           ; SOURCE LINE # 93
0015 7DF7              MOV     R5,#0F7H
0017         ?C0022:
0017 DDFE              DJNZ    R5,?C0022
                                           ; SOURCE LINE # 94
0019         ?C0018:
0019 EF                MOV     A,R7
001A 1F                DEC     R7
001B 70EB              JNZ     ?C0016
001D 1E                DEC     R6
001E         ?C0030:
001E 80E8              SJMP    ?C0016
                                           ; SOURCE LINE # 95
0020         ?C0025:
0020 22                RET     
             ; FUNCTION _delayz (END)

             ; FUNCTION _delay (BEGIN)
                                           ; SOURCE LINE # 96
;---- Variable 'count' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 99
;---- Variable 'i' assigned to Register 'R4/R5' ----
0000 E4                CLR     A
0001 FD                MOV     R5,A
0002 FC                MOV     R4,A
0003         ?C0026:
0003 C3                CLR     C
0004 ED                MOV     A,R5
0005 9F                SUBB    A,R7
0006 EC                MOV     A,R4
0007 9E                SUBB    A,R6
0008 5007              JNC     ?C0029
000A 0D                INC     R5
000B BD0001            CJNE    R5,#00H,?C0031
000E 0C                INC     R4
000F         ?C0031:
000F 80F2              SJMP    ?C0026
                                           ; SOURCE LINE # 100
0011         ?C0029:
0011 22                RET     
             ; FUNCTION _delay (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    323    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17       4
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.00   PING                                                                  05/17/2019 21:37:53 PAGE 8   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
