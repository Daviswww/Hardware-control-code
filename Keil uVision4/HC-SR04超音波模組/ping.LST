C51 COMPILER V9.00   PING                                                                  05/17/2019 14:28:05 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE PING
OBJECT MODULE PLACED IN ping.OBJ
COMPILER INVOKED BY: D:\KEILC 4\C51\BIN\C51.EXE ping.c BROWSE DEBUG OBJECTEXTEND CODE

line level    source

   1          #include <reg51.h>
   2          
   3          sbit trig=P3^5;
   4          sbit LED=P2^4;
   5          void convert(unsigned int);
   6          void display(unsigned char );
   7          void delay(unsigned int);
   8          void delayz(unsigned int);
   9          void send_pulse(void);
  10          unsigned int get_range(void);
  11          void updata(void);
  12          unsigned char seg[10] =
  13          {
  14              0xC0, 0xf9, 0xa4, 0xb0, 0x99,
  15              0x92, 0x82, 0xf8, 0x80, 0x90
  16          };
  17          unsigned char buf[4] = {0, 0, 0, 0};
  18          unsigned int cms;
  19          unsigned char j;
  20          void main()
  21          {
  22   1          for(j = 0; j < 3; j++)
  23   1          {
  24   2              LED=0x00;
  25   2              delayz(20);
  26   2              LED=0xFF;
  27   2              delayz(10);
  28   2          }
  29   1      
  30   1          TMOD=0x09;//timer0 in 16 bit mode with gate enable
  31   1          TR0=1;//timer run enabled
  32   1          TH0=0x00;
  33   1          TL0=0x00;
  34   1          P3|=0x04;//setting pin P3.2
  35   1          while(1)
  36   1          {
  37   2              get_range();
  38   2              delayz(2);
  39   2              if (cms > 40)
  40   2              {
  41   3                  P1 = 0x0A; // Forward run #00001010
  42   3              }
  43   2              else
  44   2              {
  45   3                  P1 = 0x00; // motor stop
  46   3                  delay(8333); // 8333*12us = 0.1 sec
  47   3                  P1 = 0x06; // motor turn left #00000110
  48   3                  delay(10000); // 41667*12us = 0.5sec
  49   3                  P1 = 0x00; // motor stop
  50   3              }
  51   2              
  52   2          }
  53   1      }
  54          void send_pulse(void) 
  55          {
C51 COMPILER V9.00   PING                                                                  05/17/2019 14:28:05 PAGE 2   

  56   1          TH0=0x00;TL0=0x00;
  57   1          trig=1; //Sending trigger pulse P3^^5
  58   1          delayz(10); //Wait for about 10milliseconds 
  59   1          trig=0; //Turn off trigger
  60   1      }
  61          unsigned int get_range(void)
  62          {
  63   1          long int timer_val,i=0;
  64   1          send_pulse();
  65   1          while(!INT0); //Waiting until echo pulse is detected
  66   1          while(INT0); //Waiting until echo pulse changes its state
  67   1          timer_val=(TH0<<8)+TL0;
  68   1      
  69   1          if(timer_val<38000)
  70   1          {
  71   2              cms=timer_val/59;
  72   2              if ((cms!=0)&&(cms<100))
  73   2              {
  74   3                  convert(cms);
  75   3                  updata();
  76   3              }
  77   2              else
  78   2              {
  79   3                  cms=99;
  80   3                  updata();
  81   3              }
  82   2          }
  83   1          else
  84   1          {
  85   2              cms=99;
  86   2              updata();
  87   2          }
  88   1          
  89   1          return cms;
  90   1      }
  91          void convert(unsigned int distance)
  92          {
  93   1          buf[3]=distance/1000;
  94   1          buf[2]=(distance%1000)/100;
  95   1          buf[1]=(distance%100)/10;
  96   1          buf[0]=distance%10;
  97   1      }
  98          void updata(void)
  99          {
 100   1          P2 = 0x0e;
 101   1          P0 = seg[buf[3]];
 102   1          delayz(4);
 103   1          P2 = 0x0d;
 104   1          P0 = seg[buf[2]];
 105   1          delayz(4);
 106   1          P2 = 0x0b;
 107   1          P0 = seg[buf[1]];
 108   1          delayz(4);
 109   1          P2 = 0x07;
 110   1          P0 = seg[buf[0]];
 111   1          delayz(4);
 112   1      }
 113          void delayz(unsigned int n)
 114          {
 115   1          unsigned char i;
 116   1          for(n;n>0;n--)
 117   1          {
C51 COMPILER V9.00   PING                                                                  05/17/2019 14:28:05 PAGE 3   

 118   2              for(i=250;i>0;i--);
 119   2              for(i=247;i>0;i--);
 120   2          }
 121   1      }
 122          void delay(unsigned int count)
 123          {
 124   1              unsigned int i;
 125   1              for(i = 0; i < count; i++);
 126   1      }
C51 COMPILER V9.00   PING                                                                  05/17/2019 14:28:05 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 20
                                           ; SOURCE LINE # 21
                                           ; SOURCE LINE # 22
0000 E4                CLR     A
0001 F500        R     MOV     j,A
0003         ?C0001:
                                           ; SOURCE LINE # 23
                                           ; SOURCE LINE # 24
0003 C2A4              CLR     LED
                                           ; SOURCE LINE # 25
0005 7F14              MOV     R7,#014H
0007 7E00              MOV     R6,#00H
0009 120000      R     LCALL   _delayz
                                           ; SOURCE LINE # 26
000C D2A4              SETB    LED
                                           ; SOURCE LINE # 27
000E 7F0A              MOV     R7,#0AH
0010 7E00              MOV     R6,#00H
0012 120000      R     LCALL   _delayz
                                           ; SOURCE LINE # 28
0015 0500        R     INC     j
0017 E500        R     MOV     A,j
0019 C3                CLR     C
001A 9403              SUBB    A,#03H
001C 40E5              JC      ?C0001
001E         ?C0002:
                                           ; SOURCE LINE # 30
001E 758909            MOV     TMOD,#09H
                                           ; SOURCE LINE # 31
0021 D28C              SETB    TR0
                                           ; SOURCE LINE # 32
0023 E4                CLR     A
0024 F58C              MOV     TH0,A
                                           ; SOURCE LINE # 33
0026 F58A              MOV     TL0,A
                                           ; SOURCE LINE # 34
0028 43B004            ORL     P3,#04H
002B         ?C0004:
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
002B 120000      R     LCALL   get_range
                                           ; SOURCE LINE # 38
002E 7F02              MOV     R7,#02H
0030 7E00              MOV     R6,#00H
0032 120000      R     LCALL   _delayz
                                           ; SOURCE LINE # 39
0035 D3                SETB    C
0036 E500        R     MOV     A,cms+01H
0038 9428              SUBB    A,#028H
003A E500        R     MOV     A,cms
003C 9400              SUBB    A,#00H
003E 4005              JC      ?C0006
                                           ; SOURCE LINE # 40
                                           ; SOURCE LINE # 41
0040 75900A            MOV     P1,#0AH
                                           ; SOURCE LINE # 42
0043 80E6              SJMP    ?C0004
C51 COMPILER V9.00   PING                                                                  05/17/2019 14:28:05 PAGE 5   

0045         ?C0006:
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 45
0045 E4                CLR     A
0046 F590              MOV     P1,A
                                           ; SOURCE LINE # 46
0048 7F8D              MOV     R7,#08DH
004A 7E20              MOV     R6,#020H
004C 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 47
004F 759006            MOV     P1,#06H
                                           ; SOURCE LINE # 48
0052 7F10              MOV     R7,#010H
0054 7E27              MOV     R6,#027H
0056 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 49
0059 E4                CLR     A
005A F590              MOV     P1,A
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 52
005C 80CD              SJMP    ?C0004
             ; FUNCTION main (END)

             ; FUNCTION send_pulse (BEGIN)
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
0000 E4                CLR     A
0001 F58C              MOV     TH0,A
0003 F58A              MOV     TL0,A
                                           ; SOURCE LINE # 57
0005 D2B5              SETB    trig
                                           ; SOURCE LINE # 58
0007 7F0A              MOV     R7,#0AH
0009 FE                MOV     R6,A
000A 120000      R     LCALL   _delayz
                                           ; SOURCE LINE # 59
000D C2B5              CLR     trig
                                           ; SOURCE LINE # 60
000F 22                RET     
             ; FUNCTION send_pulse (END)

             ; FUNCTION get_range (BEGIN)
                                           ; SOURCE LINE # 61
                                           ; SOURCE LINE # 62
                                           ; SOURCE LINE # 63
0000 E4                CLR     A
0001 F500        R     MOV     i+03H,A
0003 F500        R     MOV     i+02H,A
0005 F500        R     MOV     i+01H,A
0007 F500        R     MOV     i,A
                                           ; SOURCE LINE # 64
0009 120000      R     LCALL   send_pulse
000C         ?C0010:
                                           ; SOURCE LINE # 65
000C 30B2FD            JNB     INT0,?C0010
000F         ?C0011:
000F         ?C0012:
                                           ; SOURCE LINE # 66
000F 20B2FD            JB      INT0,?C0012
0012         ?C0013:
                                           ; SOURCE LINE # 67
C51 COMPILER V9.00   PING                                                                  05/17/2019 14:28:05 PAGE 6   

0012 AF8C              MOV     R7,TH0
0014 EF                MOV     A,R7
0015 FE                MOV     R6,A
0016 AD8A              MOV     R5,TL0
0018 7C00              MOV     R4,#00H
001A E4                CLR     A
001B 2D                ADD     A,R5
001C FF                MOV     R7,A
001D EC                MOV     A,R4
001E 3E                ADDC    A,R6
001F FE                MOV     R6,A
0020 E4                CLR     A
0021 8F00        R     MOV     timer_val+03H,R7
0023 8E00        R     MOV     timer_val+02H,R6
0025 F500        R     MOV     timer_val+01H,A
0027 F500        R     MOV     timer_val,A
                                           ; SOURCE LINE # 69
0029 7F70              MOV     R7,#070H
002B 7E94              MOV     R6,#094H
002D FD                MOV     R5,A
002E AB00        R     MOV     R3,timer_val+03H
0030 AA00        R     MOV     R2,timer_val+02H
0032 A900        R     MOV     R1,timer_val+01H
0034 A800        R     MOV     R0,timer_val
0036 C3                CLR     C
0037 120000      E     LCALL   ?C?SLCMP
003A 5033              JNC     ?C0014
                                           ; SOURCE LINE # 70
                                           ; SOURCE LINE # 71
003C E4                CLR     A
003D 7B3B              MOV     R3,#03BH
003F FA                MOV     R2,A
0040 F9                MOV     R1,A
0041 F8                MOV     R0,A
0042 AF00        R     MOV     R7,timer_val+03H
0044 AE00        R     MOV     R6,timer_val+02H
0046 AD00        R     MOV     R5,timer_val+01H
0048 AC00        R     MOV     R4,timer_val
004A 120000      E     LCALL   ?C?SLDIV
004D 8E00        R     MOV     cms,R6
004F 8F00        R     MOV     cms+01H,R7
                                           ; SOURCE LINE # 72
0051 E500        R     MOV     A,cms+01H
0053 4500        R     ORL     A,cms
0055 6010              JZ      ?C0015
0057 C3                CLR     C
0058 E500        R     MOV     A,cms+01H
005A 9464              SUBB    A,#064H
005C E500        R     MOV     A,cms
005E 9400              SUBB    A,#00H
0060 5005              JNC     ?C0015
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
0062 120000      R     LCALL   _convert
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
0065 800E              SJMP    ?C0038
0067         ?C0015:
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 79
0067 750000      R     MOV     cms,#00H
006A 750063      R     MOV     cms+01H,#063H
C51 COMPILER V9.00   PING                                                                  05/17/2019 14:28:05 PAGE 7   

                                           ; SOURCE LINE # 80
006D         ?C0037:
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
006D 8006              SJMP    ?C0038
006F         ?C0014:
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
006F 750000      R     MOV     cms,#00H
0072 750063      R     MOV     cms+01H,#063H
                                           ; SOURCE LINE # 86
0075         ?C0038:
0075 120000      R     LCALL   updata
                                           ; SOURCE LINE # 87
0078         ?C0017:
                                           ; SOURCE LINE # 89
0078 AE00        R     MOV     R6,cms
007A AF00        R     MOV     R7,cms+01H
                                           ; SOURCE LINE # 90
007C         ?C0018:
007C 22                RET     
             ; FUNCTION get_range (END)

             ; FUNCTION _convert (BEGIN)
                                           ; SOURCE LINE # 91
;---- Variable 'distance' assigned to Register 'R2/R3' ----
0000 AB07              MOV     R3,AR7
0002 AA06              MOV     R2,AR6
                                           ; SOURCE LINE # 92
                                           ; SOURCE LINE # 93
0004 7C03              MOV     R4,#03H
0006 7DE8              MOV     R5,#0E8H
0008 120000      E     LCALL   ?C?UIDIV
000B 8F00        R     MOV     buf+03H,R7
                                           ; SOURCE LINE # 94
000D 7C03              MOV     R4,#03H
000F 7DE8              MOV     R5,#0E8H
0011 AF03              MOV     R7,AR3
0013 AE02              MOV     R6,AR2
0015 120000      E     LCALL   ?C?UIDIV
0018 7E00              MOV     R6,#00H
001A 7F64              MOV     R7,#064H
001C CF                XCH     A,R7
001D CD                XCH     A,R5
001E CF                XCH     A,R7
001F CE                XCH     A,R6
0020 CC                XCH     A,R4
0021 CE                XCH     A,R6
0022 120000      E     LCALL   ?C?UIDIV
0025 8F00        R     MOV     buf+02H,R7
                                           ; SOURCE LINE # 95
0027 7C00              MOV     R4,#00H
0029 7D64              MOV     R5,#064H
002B AF03              MOV     R7,AR3
002D AE02              MOV     R6,AR2
002F 120000      E     LCALL   ?C?UIDIV
0032 7E00              MOV     R6,#00H
0034 7F0A              MOV     R7,#0AH
0036 CF                XCH     A,R7
0037 CD                XCH     A,R5
0038 CF                XCH     A,R7
0039 CE                XCH     A,R6
C51 COMPILER V9.00   PING                                                                  05/17/2019 14:28:05 PAGE 8   

003A CC                XCH     A,R4
003B CE                XCH     A,R6
003C 120000      E     LCALL   ?C?UIDIV
003F 8F00        R     MOV     buf+01H,R7
                                           ; SOURCE LINE # 96
0041 AE02              MOV     R6,AR2
0043 AF03              MOV     R7,AR3
0045 7C00              MOV     R4,#00H
0047 7D0A              MOV     R5,#0AH
0049 120000      E     LCALL   ?C?UIDIV
004C 8D00        R     MOV     buf,R5
                                           ; SOURCE LINE # 97
004E 22                RET     
             ; FUNCTION _convert (END)

             ; FUNCTION updata (BEGIN)
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 99
                                           ; SOURCE LINE # 100
0000 75A00E            MOV     P2,#0EH
                                           ; SOURCE LINE # 101
0003 7400        R     MOV     A,#LOW seg
0005 2500        R     ADD     A,buf+03H
                                           ; SOURCE LINE # 102
0007 120000      R     LCALL   L?0039
                                           ; SOURCE LINE # 103
000A 75A00D            MOV     P2,#0DH
                                           ; SOURCE LINE # 104
000D 7400        R     MOV     A,#LOW seg
000F 2500        R     ADD     A,buf+02H
                                           ; SOURCE LINE # 105
0011 120000      R     LCALL   L?0039
                                           ; SOURCE LINE # 106
0014 75A00B            MOV     P2,#0BH
                                           ; SOURCE LINE # 107
0017 7400        R     MOV     A,#LOW seg
0019 2500        R     ADD     A,buf+01H
                                           ; SOURCE LINE # 108
001B 120000      R     LCALL   L?0040
                                           ; SOURCE LINE # 109
001E 75A007            MOV     P2,#07H
                                           ; SOURCE LINE # 110
0021 7400        R     MOV     A,#LOW seg
0023 2500        R     ADD     A,buf
0025 F8                MOV     R0,A
0026 E6                MOV     A,@R0
0027 F580              MOV     P0,A
                                           ; SOURCE LINE # 111
0029 7F04              MOV     R7,#04H
002B 7E00              MOV     R6,#00H
002D 020000      R     LJMP    _delayz
             ; FUNCTION updata (END)

             ; FUNCTION L?0039 (BEGIN)
0000         L?0040:
0000 F8                MOV     R0,A
0001 E6                MOV     A,@R0
0002 F580              MOV     P0,A
0004 7F04              MOV     R7,#04H
0006 7E00              MOV     R6,#00H
             ; FUNCTION _delayz (BEGIN)
                                           ; SOURCE LINE # 113
C51 COMPILER V9.00   PING                                                                  05/17/2019 14:28:05 PAGE 9   

;---- Variable 'n' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 116
0008         ?C0021:
0008 D3                SETB    C
0009 EF                MOV     A,R7
000A 9400              SUBB    A,#00H
000C EE                MOV     A,R6
000D 9400              SUBB    A,#00H
000F 400F              JC      ?C0030
                                           ; SOURCE LINE # 117
                                           ; SOURCE LINE # 118
;---- Variable 'i' assigned to Register 'R5' ----
0011 7DFA              MOV     R5,#0FAH
0013         ?C0024:
0013 DDFE              DJNZ    R5,?C0024
0015         ?C0025:
                                           ; SOURCE LINE # 119
0015 7DF7              MOV     R5,#0F7H
0017         ?C0027:
0017 DDFE              DJNZ    R5,?C0027
                                           ; SOURCE LINE # 120
0019         ?C0023:
0019 EF                MOV     A,R7
001A 1F                DEC     R7
001B 70EB              JNZ     ?C0021
001D 1E                DEC     R6
001E         ?C0035:
001E 80E8              SJMP    ?C0021
                                           ; SOURCE LINE # 121
0020         ?C0030:
0020 22                RET     
             ; FUNCTION _delayz (END)

             ; FUNCTION _delay (BEGIN)
                                           ; SOURCE LINE # 122
;---- Variable 'count' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 123
                                           ; SOURCE LINE # 125
;---- Variable 'i' assigned to Register 'R4/R5' ----
0000 E4                CLR     A
0001 FD                MOV     R5,A
0002 FC                MOV     R4,A
0003         ?C0031:
0003 C3                CLR     C
0004 ED                MOV     A,R5
0005 9F                SUBB    A,R7
0006 EC                MOV     A,R4
0007 9E                SUBB    A,R6
0008 5007              JNC     ?C0034
000A 0D                INC     R5
000B BD0001            CJNE    R5,#00H,?C0036
000E 0C                INC     R4
000F         ?C0036:
000F 80F2              SJMP    ?C0031
                                           ; SOURCE LINE # 126
0011         ?C0034:
0011 22                RET     
             ; FUNCTION _delay (END)



C51 COMPILER V9.00   PING                                                                  05/17/2019 14:28:05 PAGE 10  

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    413    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
